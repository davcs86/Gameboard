<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Gameboard by @@davcs86</title>
    <environment names="Development">
        <link rel="stylesheet" href="~/css/app.css"/>
    </environment>
    <environment names="Staging,Production">
        <link rel="stylesheet" href="~/css/app.min.css" asp-append-version="true"/>
    </environment>
</head>
<body data-ng-controller="rootController as rootCtrl">
<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a asp-area="" asp-controller="Home" asp-action="Index" class="navbar-brand">T+G</a>
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                <li ng-class="{active: rootCtrl.stateIncludes('products')}">
                    <a ui-sref="products.list">Products</a>
                </li>
                <li ng-class="{active: rootCtrl.stateIncludes('companies')}">
                    <a ui-sref="companies.list">Companies</a>
                </li>
            </ul>
        </div>
    </div>
</div>
<div class="container body-content">
    @RenderBody()
    <hr/>
    <footer>
        <p>&copy; 2017 - Gameboard</p>
    </footer>
</div>
<!-- template for ui-select control -->
<script type="text/ng-template" id="directives/decorators/bootstrap/uiselect/single.html">
        <div class="form-group" ng-class="{'has-error': hasError(), 'has-success': hasSuccess(), 'has-feedback': form.feedback !== false}" ng-init="select_models=(form.schema.items | where : {value: $$value$$})">
            <label class="control-label" ng-show="showTitle()">{{form.title}}</label>
            <div class="form-group" ng-init="select_model.selected=select_models[0]">
                <ui-select ng-model="select_model.selected" ng-controller="UiSelectController" ng-if="!(form.options.tagging||false)" theme="bootstrap" ng-disabled="form.disabled" on-select="$$value$$=$item.value" class="{{form.options.uiClass}}">
                    <ui-select-match class="ui-select-match" placeholder="{{form.placeholder || form.schema.placeholder || ('placeholders.select')}}">{{select_model.selected.label}}</ui-select-match>
                    <ui-select-choices class="ui-select-choices" refresh="fetchResult(form.schema, form.options, $select.search)"
                                       refresh-delay="form.options.refreshDelay" group-by="form.options.groupBy" repeat="item in form.schema.items | propsFilter: {label: $select.search, description: (form.options.searchDescriptions===true ? $select.search : 'NOTSEARCHINGFORTHIS') }">
                        <div ng-bind-html="item.label | highlight: $select.search"></div>
                        <div ng-if="item.description">
                            <span ng-bind-html="'<small>' + (''+item.description | highlight: (form.options.searchDescriptions===true ? $select.search : 'NOTSEARCHINGFORTHIS'))+ '</small>'"></span>
                        </div>
                    </ui-select-choices>
                </ui-select>
                <ui-select ng-controller="UiSelectController" ng-model="select_model.selected" ng-if="(form.options.tagging||false) && !(form.options.groupBy || false)" tagging="form.options.tagging||false" tagging-label="form.options.taggingLabel" tagging-tokens="form.options.taggingTokens"
                           theme="bootstrap" ng-disabled="form.disabled" on-select="$$value$$=$item.value" class="{{form.options.uiClass}}">
                    <ui-select-match class="ui-select-match" placeholder="{{form.placeholder || form.schema.placeholder || ('placeholders.select')}}">{{select_model.selected.label}}&nbsp;<small>{{(select_model.selected.isTag===true ? form.options.taggingLabel : '')}}</small></ui-select-match>
                    <!--repeat code because tagging does not display properly under group by but is still useful -->
                    <ui-select-choices class="ui-select-choices" refresh="form.options.refreshMethod(form.schema, $select.search)"
                                       refresh-delay="form.options.refreshDelay" repeat="item in form.schema.items | propsFilter: {label: $select.search, description: (form.options.searchDescription===true ? $select.search : 'NOTSEARCHINGFORTHIS') }">
                        <div ng-if="item.isTag" ng-bind-html="'<div>' + (item.label   | highlight: $select.search) + ' ' + form.options.taggingLabel + '</div><div class=&quot;divider&quot;></div>'"></div><div ng-if="!item.isTag" ng-bind-html="item.label + item.isTag| highlight: $select.search"></div>
                        <div ng-if="item.description">
                            <span ng-bind-html="'<small>' + (''+item.description | highlight: (form.options.searchDescriptions===true ? $select.search : 'NOTSEARCHINGFORTHIS')) + '</small>'"></span>
                        </div>
                    </ui-select-choices>
                </ui-select>

                <!--repeat code because tagging does not display properly under group by but is still useful -->

                <ui-select ng-controller="UiSelectController" ng-model="select_model.selected" ng-if="(form.options.tagging||false) && (form.options.groupBy || false)" tagging="form.options.tagging||false" tagging-label="form.options.taggingLabel" tagging-tokens="form.options.taggingTokens"
                           theme="bootstrap" ng-disabled="form.disabled" on-select="$$value$$=$item.value" class="{{form.options.uiClass}}">
                    <ui-select-match class="ui-select-match" placeholder="{{form.placeholder || form.schema.placeholder || ('placeholders.select')}}">{{select_model.selected.label}}&nbsp;<small>{{(select_model.selected.isTag===true ? form.options.taggingLabel : '')}}</small></ui-select-match>
                    <ui-select-choices class="ui-select-choices" group-by="form.options.groupBy" refresh="form.options.refreshMethod(form.schema, $select.search)"
                                       refresh-delay="form.options.refreshDelay" repeat="item in form.schema.items | propsFilter: {label: $select.search, description: (form.options.searchDescription===true ? $select.search : 'NOTSEARCHINGFORTHIS') }">
                        <div ng-if="item.isTag" ng-bind-html="'<div>' + (item.label   | highlight: $select.search) + ' ' + form.options.taggingLabel + '</div><div class=&quot;divider&quot;></div>'"></div><div ng-if="!item.isTag" ng-bind-html="item.label + item.isTag| highlight: $select.search"></div>
                        <div ng-if="item.description">
                            <span ng-bind-html="'<small>' + (''+item.description | highlight: (form.options.searchDescriptions===true ? $select.search : 'NOTSEARCHINGFORTHIS')) + '</small>'"></span>
                        </div>
                    </ui-select-choices>
                </ui-select>
                <input type="hidden" toggle-single-model sf-changed="form" ng-model="insideModel" schema-validate="form" />
                <span ng-if="form.feedback !== false"
                      class="form-control-feedback"
                      ng-class="evalInScope(form.feedback) || {'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError() }"></span>
                <div class="help-block"
                     ng-show="(hasError() && errorMessage(schemaError())) || form.description"
                     ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div>
            </div>
        </div>
    </script>
<!-- /template for ui-select control -->
<environment names="Development">
    <script src="~/js/app.js"></script>
</environment>
<environment names="Staging,Production">
    <script src="~/js/app.min.js"></script>
</environment>
</body>
</html>